import socket
import argparse
import sys

'''

OVERFLOWS INTO OTHER MEMORY SEGMENTS:


This a python client program for making and parsing HTTE request.
It is apart of the lectures of Rutgers Cyber Knights Computer
Hacking Club (R)

IMPORTANT INFO:

make sure you HAVE MADE A BACKUP OF YOUR /etc/passwd BEFORE TRYING.

make sure you have done:

sudo mkdir /tmp/etc
sudo ln -s /bin/bash /tmp/etc/passwd

AND THEN REMOVED IT WHEN YOU ARE DONE!!

sudo rm -r /tmp/etc

this program is used as follows:

python htteclient.py --ip 'youip(probably 127.0.0.1 if run locally)'

server ran as follows:
-->when in files directory run--> make
---> sudo ./htte
and its running
sudo kill any responsive programs:

sudo ps -aux | grep -i 'program name'
sudo kill -9 [pid]

CHALLENGE 1: add yourself as a superuser under your chosen username to the server.
    please use your name so we don't get duplicates

    use TESTUSER to verify that you succeeded

CHALLENGE2: same as last week. provide a password to get access granted....but there is catch...


'''

__author__ = "Cyber Knights"


'''
socket with context manager
'''
class smartSocket:

    def __init__(self,family,type):
        self.socket = socket.socket(socket.AF_INET,socket.SOCK_STREAM)

    def __enter__(self):
        return self.socket

    def __exit__(self,type,value,traceback):
        self.socket.close()
        try:
            if issubclass(type,socket.error):
                print(value)
                sys.exit(1)
            if issubclass(type,TypeError):
                print(value)
                sys.exit(1)
        except TypeError:
            pass


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
	description='HTTE Client'
    )
    parser.add_argument(
        '--ip',
        dest='ip',
        help='htte server ip'
    )

    args = parser.parse_args()
 #htte uses port 4000
    PORT = 4000
    with smartSocket(socket.AF_INET,socket.SOCK_STREAM) as s:
        #connect to server at ip/port tuple
        s.connect((args.ip,PORT))

        #set status to the following for:
            #1 --> challenge 1 : task is to add yourself as a root user on the server...using any username you want
            #2 --> challenge 2 : provide a password to get access, sams as last week, but with protection
            #TESTUSER -->check if your user is root
                # set payload to : su yourusername -c whoami > /var/yourusername.txt\t/var/yourusername.txt --> check if your user is root


        '''
        Example packets:


            for testing if your succeeded:
                where you attempted to add lie as superuser
                TYPE = 'HTTE/1.0 GET\n'
                CODE = 'CODE: 4DEDS3\n'
                STATUS = "STATUS: "
                stat = "TESTUSER"
                PAYLOAD = "su lie -c whoami > /var/lie.txt\t/var/lie.txt"
                packet = TYPE+CODE+STATUS+stat+"\n"+PAYLOAD

            for challenge 1:

                TYPE = 'HTTE/1.0 GET\n'
                CODE = 'CODE: 4DEDS3\n'
                STATUS = "STATUS: "
                stat = "1"
                PAYLOAD = "A*100"+"lol"
                packet = TYPE+CODE+STATUS+stat+"\n"+PAYLOAD



        '''


        #form HTTE packet
        TYPE = 'HTTE/1.0 GET\n'
        CODE = 'CODE: 4DEDS3\n'
        STATUS = "STATUS: "
        stat = "1"
        PAYLOAD = "PAYLOAD"
        packet = TYPE+CODE+STATUS+stat+"\n"+PAYLOAD
        #send and recv data
        s.send(packet.encode(encoding='utf_8'))
        data = s.recv(2000)
        print('Received',repr(data))
